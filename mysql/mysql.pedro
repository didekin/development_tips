COMMANDS
========

-- To start/stop manually mysql server:
   $ mysql.server start
   $ mysql.server stop

--  To execute a .sql file from the console
    $ mysql -h hostname -uuser -ppassword database < path/to/test.sql

--  To CANCEL a command not executed:
    mysql> \c

CONFIGURATION
=============

--  Location of my.cnf file with a Homebrew installation: /usr/local/etc/my.cnf (Not used now)

--  Location of mysql installation with a native Mac installer: /usr/local/mysql

--  To display system variable names and values:
    $ mysqld --verbose --help
    $ mysqladmin -u root  -p variables
    Or inside the mysql console:
    mysql> SHOW VARIABLES;
    mysql> SHOW VARIABLES LIKE '%size%';

--  To run a session with a specific value in a server variable:
    $ mysqld --max_allowed_packet=64M

--  To run a session with a specific value in a client variable:
    $ mysql --max_allowed_packet=64M -uuser -ppassword databaseName

--  To change a global variable in the server:
    mysql> set @@global.wait_timeout=57600;

--  To see value of the option --secure-file-priv
    mysql> SELECT @@GLOBAL.secure_file_priv;

--  To change character set and collation in a database:
    mysql> ALTER DATABASE didekin CHARACTER SET utf8 COLLATE utf8_general_ci;

-- To enable load files from the client:
   $ mysql -h localhost -u pedro -p  --local-infile=1

--  To know the current engine of a table:
    mysql> select engine from information_schema.tables where table_schema = 'didekin' and table_name = 'usuario';

--  To know a foreign key error definition:
    mysql> SHOW ENGINE INNODB STATUS;

DATABASE
========

--  To see databases created:
    > show databases;
--  To create a database:
    mysql> create database databasename
--  To delete a database
    $ mysql> drop database nameDatabase

--  To find out which database is currently selected:
    mysql> select database();

--  To see the sql create of all the tables in a database, without data and definers for views:
    $  mysqlpump --skip-dump-rows --skip-definer -uroot -pspivak didekin;

--  To view the tables of a database:
    mysql> show tables;

--  To see the disk storage used by a database:
    $ sudo du -sh /usr/local/mysql/databaseName

FILES
=====

--  To export a file in CSV format:
    mysql> SELECT tx_tipo, tx_fecha, tx_puntos
           FROM tx_schindler INTO OUTFILE '/Users/pedro/Documents/clientes/leben/demo_dic_2018/data/tx_schindler.csv'
           FIELDS TERMINATED BY ','
           LINES TERMINATED BY '\r\n';

TABLES
======

--  To view the properties of InnoDB tables:
    mysql> show table status from didekin like 'table_name' \G;

--  To see de structure of a table:
    mysql> describe table_name;

--  To count the columns of a table:
    mysql > SELECT count(*) FROM information_schema.columns WHERE table_name = 'myTable';

--  To see the sql create of a table:
    mysql> SHOW CREATE TABLE table_name;

--  To see the indexes of a table
    mysql> show index from tableName;

--  To see the foreign_key in a table:
    mysql> SELECT * FROM information_schema.TABLE_CONSTRAINTS where CONSTRAINT_SCHEMA='didekin' and TABLE_NAME='incidencia_comment';

-- To determine all possible values for a SET column, set_col in this example:
   mysql> SHOW COLUMNS FROM tbl_name LIKE set_col;

--  To delete the data in a set of tables:
    mysql> delete a, b from table_name_1 as a, table_name_2 as b;

--  To count rows in a table without a full scan of the table:
    mysql> select table_rows from information_schema.tables where table_schema = 'leben' and table_name = 'tx_schindler';

QUERIES
=======

mysql> SELECT * FROM pet WHERE (species = 'cat' AND sex = 'm')
                OR (species = 'dog' AND sex = 'f');

mysql> SELECT name, birth FROM pet;

mysql> SELECT DISTINCT owner FROM pet;

mysql> SELECT name, birth FROM pet ORDER BY birth;

mysql> SELECT name, birth FROM pet ORDER BY birth DESC;

mysql> SELECT COUNT(DISTINCT titular_id, tx_fecha) from tx_schindler;

mysql> SELECT COUNT(IF(tx_tipo='amazon',1,NULL)) as 'AMAZON', \
            COUNT(IF(tx_tipo='atrapalo',1,NULL)) as 'ATRAPALO', \
            COUNT(IF(tx_tipo='rusticae',1,NULL)) as 'RUSTICAE' from tx_schindler;

mysql> SELECT COUNT(distinct titular_id) from tx_schindler where tx_fecha <= '2017-08-31';

--  To sort by type of animal in ascending order, then by birth date within animal type in descending order (youngest animals first):
    mysql> SELECT name, species, birth FROM pet
            ORDER BY species, birth DESC;

-- To test for a boolean condition:
   mysql> select (0 is not null);

-- To select records with the 'value' in the SET colum set_col:
   mysql> SELECT * FROM tbl_name WHERE FIND_IN_SET('value',set_col) > 0;

-- Similar, but for the first (1) value of the set:
   mysql> SELECT * FROM tbl_name WHERE set_col & 1;

JOINS
-----

-- To join a table with itself:
   mysql> SELECT p1.name, p1.sex, p2.name, p2.sex, p1.species
            FROM pet AS p1 INNER JOIN pet AS p2
     	    ON p1.species = p2.species AND p1.sex = 'f' AND p2.sex = 'm';

--  To exclude from the records in one table those in another:
    Option 1 (only counting here):
        SELECT count(DISTINCT id_conv) id_conv FROM turno WHERE id_conv NOT IN (SELECT id_conv FROM enlace);
    Option 2 (only counting here):
        SELECT count(DISTINCT t.id_conv) 
        FROM turno t
        LEFT JOIN enlace e ON t.id_conv = e.id_conv;
        WHERE e.id_conv IS NULL;

STORED PROCEDURES
================

--  To see the definition of all store procedures:
    > mysql SHOW PROCEDURE STATUS;
--  To see the definition of a particular procedure:
    > mysql show create procedure myProcedure;
--  To see the definition of all functions:
    > mysql SHOW FUNCTION STATUS;

UPDATES
=======

--  To update the value in column in the register with a certain value in a column with UNIQUE values.
    mysql> UPDATE <table> SET <column-name> = '1989-08-31' WHERE <unique-col-name> = 'Bowser';

USERS
=====

-- To change root password:
   $ /usr/local/opt/mysql/bin/mysqladmin -u root password 'new-password'

--  To create a user with a host:
    mysql> create user 'userName'@'host' identified by 'password';
    mysql> grant all on dataBase.* to 'userName'@'localhost';
    En instalaciones con versiÃ³n 8.*, para evitar problemas con caching_sha2_password Authentication Plugin:
    > create user 'pedro'@'localhost' identified WITH mysql_native_password by 'password';
--  To create a user without specifying a host:
    mysql> create user 'userName'@'%' identified by 'password';
    mysql> grant all on dataBase.* to 'userName'@'%';
--  To allow dropping views to a user:
    mysql> GRANT SYSTEM_USER ON *.* TO 'pedro'@'localhost';

--  To grant privilege to write a file:
    mysql> GRANT FILE ON *.* TO 'john'@'%';

--  To see the privileges for an account:
    mysql> SHOW GRANTS FOR 'username'@'%';
--  To see the users in the database:
    mysql> select user, host from mysql.user;
--  To see the current user:
    mysql> SELECT USER();

--  To delete a user:
    mysql> DROP USER 'userName'@'host';

