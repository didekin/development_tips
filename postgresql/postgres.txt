--  Installing
    > brew install postgres
--  To start/stop postgres:
    > brew services start postgresql@15
    > brew services stop postgresql@15
        Aliases in .zshrc:
        alias postgres.start='brew services start postgresql@15'
        alias postgres.stop='brew services stop postgresql@15'
--  To have psql in path, I added the following line to .zshrc
    > export PATH="/usr/local/opt/postgresql@15/bin:$PATH"
--  To see if postgresql is running:
    > brew services list
--  To see the postgres version after starting the service
    > postgres -V

--  To restart postgresql@15 after an upgrade:
    > brew services restart postgresql@15
    Or, if you don't want/need a background service you can just run:
    >  /usr/local/opt/postgresql@15/bin/postgres -D /usr/local/var/postgresql@15

--  To create a data base
    > createdb dyndis  {outside psql}
--  To delete a database:
    > dropdb dyndis
--  To log in psql
    > psql dbasename

PSQL
====

--  To login in a database with a user and propmpt of password:
    > psql -d dyndis -U cl_dyndis -W
    Without password prompt:
    > psql -d dyndis -U cl_dyndis
--  Help
    mydb=> \h
--  To exit psql:
    mydb=> \q
--  To list data bases
    mydb=> \l
--  To select a database:
    mydb=> \c database_name
--  To list schemas
    mydb=> \dn
--  To list tables in a specific schema:
    mydb=> \dt schemaname.*

--  To create a user
    mydb=> CREATE USER username WITH PASSWORD 'userpswd';
    or
    mydb=> CREATE ROLE username LOGIN;
    or
    mydb=> CREATE ROLE name PASSWORD 'pswd';
    or
    mydb=> CREATE ROLE name PASSWORD 'pswd' LOGIN CREATEDB; // able to create DBs.
--  To grant privileges to a user in a database:
    mydb=> GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA dyndis TO cl_dyndis;
--  To list users
    mydb=> \du
    SELECT rolname FROM pg_roles;
--  To drop a user
    mydb=> DROP OWNED BY roleTodrop;
    mydb=> DROP ROLE roleTodrop;

--  To read commands from the specified file:
    mydb=> \i filename.sql

JDBC DRIVER
===========

BREW
====

--  For compilers to find postgresql@15 you may need to set:
    > export LDFLAGS="-L/usr/local/opt/postgresql@15/lib"
    > export CPPFLAGS="-I/usr/local/opt/postgresql@15/include"

HELP
====

--  To loop sql files in directory

    https://stackoverflow.com/questions/44957258/how-to-run-sql-files-in-a-directory-in-order-by-file-name-in-psql