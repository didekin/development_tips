CONNECTION TO A HOST  (generic utilities)
====================

-- To print in screen the fingerprint of host public key:
   $ ssh-keyscan ipAddressNumbers >> tempFile
   $ ssh-keygen -l -f tempFile
   $ rm tempFile
-- To obtain the public key from a private key file:
   $ openssl rsa -in private.key -pubout -out public.key
-- To display the finger print of a public key:
   $ ssh-keygen -lf publicKeyFile
-- To remove an entry from ~/.ssh/knownhosts:
   $ ssh-keygen -R hostName

-- (Useful with remote git repositories) to add passphrases in the keychain and to avoid to enter
   it with every 'push':
   $ /usr/bin/ssh-add -K   // Identity added: /path_to_.ssh/id_rsa

CONNECTION AWS
==============
-- To connect to the EC2 instance
   $ ssh -i path_to_private_key user@instanceDNSname
   Example: $ ssh -i /Users/pedro/.ssh/aws_ssh_keypair1 ec2-user@ec2-52-57-231-58.eu-central-1.compute.amazonaws.com

-- (Inside didekinspring project)
   $ eb ssh didekin-web-pre   // It doesn't require ssh inbound rule in security group.

-- To verify that the private key you have on your local machine matches the public key that's stored in AWS,
   generate a fingerprint from the private key and check with that shown in AWS EC2 console:
   $ openssl rsa -in path_to_private_key -pubout -outform DER | openssl md5 -c
   // The fingerprint is calculated using an MD5 hash function.

EXECUTION
=========
-- To pass a command to a remote host without redirecting the output to the local host:
   $ ssh remoteHost 'ls remoteDir > fileRemote.out'
-- To redirect the output to localhost:
   $ ssh remoteHost ls remoteDir > fileRemote.out

-- To copy something from this machine to some other machine:
   $ scp /path/to/local/file username@hostname:/path/to/remote/file

-- To copy something from another machine to this machine:
   $ scp username@hostname:/path/to/remote/file /path/to/local/file

-- To copy from another machine to this machine, with a port number specified:
   $ scp -P 1234 username@hostname:/path/to/remote/file /path/to/local/file

-- Forwarding to Mysql
   $ $ ssh -N -L3306:127.0.0.1:3306 remotehost