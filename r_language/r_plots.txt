BASE
====================================

--  To change the default square window (7,7) to a rectangle:
    > windows(7,4)
--  To specify two sets of axis on the same row:
    > par(mfrow=c(1,2))

--  To plot one variable
    > plot(varName)  // usually a scattered plot.
    Two variables:
    > plot(x,y,pch=21,bg="red") or plot(y~x)  // 'pch' is plot char and 'bg', background, both refer to the kind of 'points' to show.
    > plot(factor(var1),var2) // it produces a box plot.

--  To produce scatterplots for just a subset of the variables in a dataframe (mtcars, p.e.):
    > pairs(∼ mpg + displacement + horsepower + weight + acceleration , mtcars)
--  For all the variables:
    > pairs(mtcars)
--  An histogram for one variable:
    > hist(df$varY)

--  To simulate 16 samples and their variances from a normal distribution and to plot them:
    > plot(c(0,32),c(0,15),type="n",xlab="Sample size",ylab="Variance")  // to draw the axis and the labels.
    > for (n in seq(3,31,2)) {
          for( i in 1:30){
            x <- rnorm(n,mean=10,sd=2)
            points(n,var(x))
          }
      }

--  Three dimensional plots:
    > contour(x,y,f,nlevels=45,add=T)
    > persp(x,y,fa,theta=30,phi=20)

Exploratory analysis
--------------------

--  To look for interactions between continuous explanatory variables: coplot.
    The function plots y against x conditional on the value of z.
    > coplot(y~x|z,pch=16,panel=panel.smooth)   //  'panel.smooth' fits a trend line through the scatterplot
--  To look for interactions between factor variables and a continuous response:
    > barplot(tapply(df$contVar,list(factor1,factor2),mean), beside=TRUE,xlab="factor2Name")


GGPLOT2
====================================

--  When creating ggplot2 graphics,  put the + at the end of the line, not the start

--  Help about aestetics:
    > ?geom_name      //  ?geom_point,?geom_smooth, ..
    > vignette("ggplot2-specs")

--  To set an aesthetic manually, set the aesthetic by name as an argument of your geom function:
    geom_point(mapping = aes(x = displ, y = hwy), color = "blue")  # color is out aes()
--  To define the scale width of a variable:
    count(cut_width(variableName, 0.5))  # 0.5 es la separación entre valores de la escala. 'Count' es la función que la utiliza.
--  To set the width of the intervals in a histogram (¿y en otros tipos de gráfico?):
    geom_histogram(binwidth = 0.1)
--  To zoom to small values of the y-axis:
    geom_histogram(mapping = aes(x = y), binwidth = 0.5) +
    coord_cartesian(ylim = c(0, 50))
--  To reorder the scale values of an axis:
    geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) # reorder of class after hwy median values.
--  To rotate axis, when having long labels in x axis:
    geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
    coord_flip()

--  EJEMPLOS

    BAR PLOT

    ggplot() +
      geom_bar(  mapping = aes(x = num_usuarios, y =  porcentaje_paginas), stat = "identity", fill = "brown4") +
      geom_vline(xintercept = stats_all_paginas[["mediana_usuarios"]], colour = "brown2")+
      ylab("Porcentaje de páginas") +
      xlab("Número de usuarios únicos que han consultado la página en el mes") +
      scale_x_continuous(breaks = seq(0, 5000, by = 2)) +
      scale_y_continuous(breaks = seq(0, 100, by = 2))