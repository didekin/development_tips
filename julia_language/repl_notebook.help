ENVIRONMENT
===========

--  To choose the number of rows or columns in the output:
    > ENV["LINES"] = 15 
    > ENV["COLUMNS"] = 15 
HELP
====

--  To get help about a function:
    > ?
    > methods(functionName)

PACKAGES
========

--  Default package server with juliacomputing installation:
    https://pkg.juliacomputing.com

--  To change to package manager:
    > ]
--  To see options in the package manager:
    > ?
--  To add a package from a repository:
    > add https://github.com/VMLS-book/VMLS.jl
--  To add a development version:
    > add TextAnalysis#master
--  To come back to Julia shell:
    > backspace or Ctrl C

--  To import a package into a Julia session:
    > using LinearAlgebra, SparseArrays, VMLS
--  To user a package in a script (written at the beginning):
    > using LinearAlgebra, SparseArrays, VMLS

--  To see functions available in a package:
    > pkgName + TAB

--  To see where is in local the source code of a module:
    > (pathof(MySQL)  // module MySQL.

SCRIPTS
=======

--  To evaluate an script within julia REPL:
    > include("script_name.jl")
--  To run the scritp in a terminal window:
    $ julia script_name.jl arg1 arg2 ..
--  To evaluate code as though it were the contents of a file
    $ include_string(moduleName, codeString)  
    For long chunks of code: """ 
                             beginninCode......endingCode
                             """

--  To send current line or selection to REPL:
    > cmd + shift + enter
--  To evaluate a whole script file:
    > cmd + ctrl + enter

--  To suppress output after a command:
  > (at the end of the instruction) ;

SESSION
=======

--  To open REPL:
    > alt + j + alt + o
--  To end a session:
    > Ctrl D  or exit() or cmd + j + cmd + k
--  The variable 'ans' is bounded to the last evaluated expression.
--  To know the active environment:
    > Base.active_project()

SOME COMMANDS AND FUNCTIONS
===========================

--  To know how to type a symbol, just type ? and then paste the symbol.
